{"version":3,"sources":["../../src/web/uiComponents.tsx"],"sourcesContent":["import {\n  CreateOrganization as BaseCreateOrganization,\n  GoogleOneTap as BaseGoogleOneTap,\n  OrganizationList as BaseOrganizationList,\n  OrganizationProfile as BaseOrganizationProfile,\n  OrganizationSwitcher as BaseOrganizationSwitcher,\n  SignIn as BaseSignIn,\n  SignInButton as BaseSignInButton,\n  SignInWithMetamaskButton as BaseSignInWithMetamaskButton,\n  SignOutButton as BaseSignOutButton,\n  SignUp as BaseSignUp,\n  SignUpButton as BaseSignUpButton,\n  UserButton as BaseUserButton,\n  UserProfile as BaseUserProfile,\n} from '@clerk/clerk-react';\nimport { Platform } from 'react-native';\n\nimport { errorThrower } from '../utils/errors';\n\nconst ErrorComponent = (componentName: string) => {\n  errorThrower.throw(`<${componentName}/> component is not supported in native environments.`);\n};\n\nfunction WrapComponent<T extends { displayName: string }>(component: T) {\n  const commonentName = component.displayName.replace('withClerk(', '').replace(')', '');\n\n  // @ts-expect-error - This is just to make the function signature match the original\n  return Platform.select<T>({\n    // @ts-expect-error - This is just to make the function signature match the original\n    native: () => () => ErrorComponent(commonentName),\n    default: () => component,\n  })();\n}\n\nexport const SignIn: typeof BaseSignIn = WrapComponent(BaseSignIn);\nexport const SignUp: typeof BaseSignUp = WrapComponent(BaseSignUp);\n\nexport const UserButton: typeof BaseUserButton = WrapComponent(BaseUserButton);\nexport const UserProfile: typeof BaseUserProfile = WrapComponent(BaseUserProfile);\n\nexport const OrganizationProfile: typeof BaseOrganizationProfile = WrapComponent(BaseOrganizationProfile);\nexport const OrganizationSwitcher: typeof BaseOrganizationSwitcher = WrapComponent(BaseOrganizationSwitcher);\nexport const OrganizationList: typeof BaseOrganizationList = WrapComponent(BaseOrganizationList);\nexport const CreateOrganization: typeof BaseCreateOrganization = WrapComponent(BaseCreateOrganization);\n\nexport const SignInButton: typeof BaseSignInButton = WrapComponent(BaseSignInButton);\nexport const SignUpButton: typeof BaseSignUpButton = WrapComponent(BaseSignUpButton);\nexport const SignOutButton: typeof BaseSignOutButton = WrapComponent(BaseSignOutButton);\nexport const SignInWithMetamaskButton: typeof BaseSignInWithMetamaskButton =\n  WrapComponent(BaseSignInWithMetamaskButton);\nexport const GoogleOneTap: typeof BaseGoogleOneTap = WrapComponent(BaseGoogleOneTap);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAcO;AACP,0BAAyB;AAEzB,oBAA6B;AAE7B,MAAM,iBAAiB,CAAC,kBAA0B;AAChD,6BAAa,MAAM,IAAI,aAAa,uDAAuD;AAC7F;AAEA,SAAS,cAAiD,WAAc;AACtE,QAAM,gBAAgB,UAAU,YAAY,QAAQ,cAAc,EAAE,EAAE,QAAQ,KAAK,EAAE;AAGrF,SAAO,6BAAS,OAAU;AAAA;AAAA,IAExB,QAAQ,MAAM,MAAM,eAAe,aAAa;AAAA,IAChD,SAAS,MAAM;AAAA,EACjB,CAAC,EAAE;AACL;AAEO,MAAM,SAA4B,cAAc,mBAAAA,MAAU;AAC1D,MAAM,SAA4B,cAAc,mBAAAC,MAAU;AAE1D,MAAM,aAAoC,cAAc,mBAAAC,UAAc;AACtE,MAAM,cAAsC,cAAc,mBAAAC,WAAe;AAEzE,MAAM,sBAAsD,cAAc,mBAAAC,mBAAuB;AACjG,MAAM,uBAAwD,cAAc,mBAAAC,oBAAwB;AACpG,MAAM,mBAAgD,cAAc,mBAAAC,gBAAoB;AACxF,MAAM,qBAAoD,cAAc,mBAAAC,kBAAsB;AAE9F,MAAM,eAAwC,cAAc,mBAAAC,YAAgB;AAC5E,MAAM,eAAwC,cAAc,mBAAAC,YAAgB;AAC5E,MAAM,gBAA0C,cAAc,mBAAAC,aAAiB;AAC/E,MAAM,2BACX,cAAc,mBAAAC,wBAA4B;AACrC,MAAM,eAAwC,cAAc,mBAAAC,YAAgB;","names":["BaseSignIn","BaseSignUp","BaseUserButton","BaseUserProfile","BaseOrganizationProfile","BaseOrganizationSwitcher","BaseOrganizationList","BaseCreateOrganization","BaseSignInButton","BaseSignUpButton","BaseSignOutButton","BaseSignInWithMetamaskButton","BaseGoogleOneTap"]}