"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClerkProvider_exports = {};
__export(ClerkProvider_exports, {
  ClerkProvider: () => ClerkProvider
});
module.exports = __toCommonJS(ClerkProvider_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_polyfills = require("../polyfills");
var import_clerk_react = require("@clerk/clerk-react");
var WebBrowser = __toESM(require("expo-web-browser"));
var import_runtime = require("../utils/runtime");
var import_singleton = require("./singleton");
const SDK_METADATA = {
  name: "@clerk/clerk-expo",
  version: "2.2.10"
};
function ClerkProvider(props) {
  const { children, tokenCache, publishableKey, ...rest } = props;
  const pk = publishableKey || process.env.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY || process.env.CLERK_PUBLISHABLE_KEY || "";
  if ((0, import_runtime.isWeb)()) {
    WebBrowser.maybeCompleteAuthSession();
  }
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_clerk_react.ClerkProvider,
    {
      ...rest,
      publishableKey: pk,
      sdkMetadata: SDK_METADATA,
      Clerk: (0, import_runtime.isNative)() ? (0, import_singleton.getClerkInstance)({ publishableKey: pk, tokenCache }) : null,
      standardBrowser: !(0, import_runtime.isNative)(),
      children
    },
    pk
  );
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ClerkProvider
});
//# sourceMappingURL=ClerkProvider.js.map